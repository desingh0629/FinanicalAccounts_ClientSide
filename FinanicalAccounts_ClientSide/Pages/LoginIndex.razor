@page "/loginIndex"
@using FinanicalAccountsClient.IRepository
@using FinanicalAccountsClient.Model.Entities
@inject IUserLogInRepository uir

@* <h3>Login</h3> *@

<style>
    .login-form {
        width: 300px; /* Adjust width as needed */
        margin: 0 auto; /* Center align the form horizontally */
        padding: 20px; /* Add padding inside the border */
        border: 2px solid #007bff; /* Set border with color */
        border-radius: 8px; /* Add border radius for rounded corners */
    }

    /* Style for input fields */
    .form-group {
        margin-bottom: 10px; /* Add space between input fields */
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    /* Style for the submit button */
    .btn {
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #0056b3;
        }

</style>

<form class="login-form" @onsubmit="onLogin">
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" class="form-control" @bind="user.UserName" required />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" class="form-control" @bind="user.Password" required />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>


@code {
    LoginModel user = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        user.UserName = "";
        user.Password = "";
    }

    async Task onLogin()
    {
        var data = await uir.LoginAsync(user);
    }
}
