@page "/user"
@using FinanicalAccountsClient.IRepository
@inject IUserRepository userRepo

<h3>Create User</h3>
<br />

<form @onsubmit="CreateUser">
    <div class="row">
        <div class="row col-lg-6">
            <div class="col-md-3">
                <label for="username">Username</label>
            </div>
            <div class="col-md-9">
                <input type="text" class="form-control" id="username" @bind="user.Username" required />
            </div>
            <div class="col-md-3 mt-3">
                <label for="email">Email</label>
            </div>
            <div class="col-md-9 mt-3">
                <input type="email" class="form-control" id="email" @bind="user.Email" required />
            </div>
            <div class="col-md-3 mt-3">
                <label for="password">Password</label>
            </div>
            <div class="col-md-9 mt-3">
                <input type="password" class="form-control" id="password" @bind="user.PasswordHash" required />
            </div>
            <div class="col-md-7 mt-3">
            </div>
            <div class="col-md-5 mt-3">
                <button class="btn btn-primary" type="submit">Create</button>

            </div>

        </div>
    </div>

</form>


@code {
    FinancialAccounts.Model.Entities.User user = new();

    async Task CreateUser()
    {
        await userRepo.AddAsync(user);
    }
}
